@page "/student-list"
@using Newtonsoft.Json
@inject NavigationManager navigationManager
@inject HttpClient Http

<PageTitle>Students List</PageTitle>

<h1>Students List</h1>



@if (studentsLists == null)
{
    <p><em>Loading.....</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Student Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email Address</th>
                <th>Gender</th>
                <th>Created On</th>
                <th></th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var students in studentsLists)
            {
                <tr>
                    <td>@students.StudentId</td>
                    <td>@students.FirstName</td>
                    <td>@students.LastName</td>
                    <td>@students.EmailAddress</td>
                    <td>@students.Gender</td>
                    <td>@students.CreateOn</td>
                    <td>
                        <button type="button" class="btn btn-primary">Edit</button>
                        <button type="button" class="btn btn-danger" @onclick="(async () => DeleteStudent(students.StudentId))">Delete</button>
                     </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    protected List<StudentEntity> studentsLists = new List<StudentEntity>();

    protected override async Task OnInitializedAsync()
    {
        await GetStudentLis();
        //StateHasChanged();
    }

    protected async Task GetStudentLis()
    {
        var apiUrl = "https://localhost:7047/api/students/GetStudentsList";
        var response = await Http.GetAsync(apiUrl);
        response.EnsureSuccessStatusCode();

        var resppnseBodyJson = await response.Content.ReadAsStringAsync();

        studentsLists = JsonConvert.DeserializeObject<List<StudentEntity>>(resppnseBodyJson);
        StateHasChanged();
        //response

    }

    protected async Task DeleteStudent(int studentId)
    {
        var apiUrl = $"https://localhost:7047/api/students/DeleteStudent/{studentId}";

        await Http.DeleteAsync(apiUrl);

        
        await GetStudentLis();
       navigationManager.NavigateTo("/student-list");
    }

}
